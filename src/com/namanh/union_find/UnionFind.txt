class UnionFind(size: Int) {
    private val parent = IntArray(size)
    private val rank = IntArray(size)

    init {
        for (i in 0 until size) parent[i] = i
    }

    fun find(x: Int): Int {
        if (x != parent[x]) {
            parent[x] = find(parent[x])
        }
        return parent[x]
    }

    fun merge(x: Int, y: Int) {
        val rootX = find(x)
        val rootY = find(y)
        if (rootX == rootY) return
        if (rank[rootX] < rank[rootY]) {
            parent[rootX] = rootY
        } else {
            parent[rootY] = rootX
            if (rank[rootX] == rank[rootY]) rank[rootX]++
        }
    }
}